#!/usr/bin/env bash
#
# This library dependencies:
# - docker

#####
## VARIABLES
###

# Portainer container name. Used to locate more easily the container,
# including its state
PORTAINER_NAME="${PORTAINER_NAME:-genese_portainer}"

# Portainer listening port
PORTAINER_PORT="${PORTAINER_PORT:-4000}"

# Portainer docker image name
PORTAINER_IMAGE="portainer/portainer-ce:alpine"

#####
## FUNCTIONS
###

# Start portainer container. If already exists: just start it.
# If missing: create and start it!
start_portainer() {
  title="PORTAINER service"

  # Search if another PORTAINER container exists
  info_msg "${title}: Search for '${PORTAINER_NAME}'…"
  state=`${DOCKER_CMD} inspect --format="{{ .State.Status }}" "${PORTAINER_NAME}" 2> /dev/null` || : # if any error: do nothing (double point)

  # Start service if needed
  succes="Started!"
  if [[ -z "${state}" ]]; then
    ${DOCKER_CMD} run -d -p "${PORTAINER_PORT}":9000 --name="${PORTAINER_NAME}" --restart=always -v "${DOCKER_SOCKET}":/var/run/docker.sock -v "${PORTAINER_NAME}":/data ${PORTAINER_IMAGE} && success_msg "${title}: ${succes}" || exit 1
  elif [[ "${state}" == "exited" ]]; then
    info_msg "${title}: Service already exists. Starting…"
    ${DOCKER_CMD} start "${PORTAINER_NAME}" && success_msg "${title}: ${succes}" || exit 1
  else
    success_msg "${title}: '${state}' state"
  fi
}

# vim: ts=2 sw=2 et nu syn=bash
