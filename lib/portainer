#!/usr/bin/env bash
#
# Dépendance de cette bibliothèque : 
# - docker

#####
## VARIABLES
###

# Nom du conteneur Portainer. Utilisé pour repérer ledit conteneur, notamment son état
NOM_PORTAINER="${NOM_PORTAINER:-genese_portainer}"

# Port d'écoute du service portainer
PORT_PORTAINER="${PORT_PORTAINER:-4000}"

# Nom de l'image utilisée pour Portainer
IMAGE_PORTAINER="portainer/portainer-ce:alpine"

#####
## FONCTIONS
###

#
lancer_portainer() {
  titre="Service PORTAINER"

  # Recherche d'un précédent conteneur PORTAINER
  info_msg "${titre} : Recherche de '${NOM_PORTAINER}'…"
  etat=`${CMD_DOCKER} inspect --format="{{ .State.Status }}" "${NOM_PORTAINER}" 2> /dev/null` || : # Si erreur, on ne fait rien (le double point)

  # Lancement du service si nécessaire
  succes="Lancé !"
  if [[ -z "${etat}" ]]; then
    ${CMD_DOCKER} run -d -p "${PORT_PORTAINER}":9000 --name="${NOM_PORTAINER}" --restart=always -v "${SOCKET_DOCKER}":/var/run/docker.sock -v "${NOM_PORTAINER}":/data ${IMAGE_PORTAINER} && success_msg "${titre} : ${succes}" || exit 1
  elif [[ "${etat}" == "exited" ]]; then
    info_msg "${titre} : Le service existe. Lancement…"
    ${CMD_DOCKER} start "${NOM_PORTAINER}" && success_msg "${titre} : ${succes}" || exit 1
  else
    success_msg "${titre} : État '${etat}'"
  fi
}

# vim: ts=2 sw=2 et nu syn=bash
