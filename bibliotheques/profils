#!/usr/bin/env bash
#
# Dépendance de cette bibliothèque : 
# - commun
# - docker

#####
## VARIABLES
###

# Profil par défaut pour créer des instances
PROFIL="${PROFIL:-defaut}"

# Répertoire dans lequel seront installées les instances
REP_INSTANCES="${REP_INSTANCES:-./instances}"
# Répertoire dans lequel trouver les profils
REP_PROFILS="${REP_PROFILS:-./profils}"

# Liste des services trouvés
LISTE_SERVICES=()

####
## FONCTIONS
###

# Découvre les services associés dans le fichier fourni
# Fonction récursive
# 1: Nom du profil situé dans le dossier ./profils
decouverte_services() {
  fichier="./profils/${1}"

  # Interruption si profil non trouvé.
  if [[ ! -f "./profils/${1}" ]]; then
    msg_erreur_exit "Profil '${1}' non trouvé !"
  fi

  # Chargement des données fournies dans le fichier
  source "${fichier}"

  # Enregistrement des services fournis si la variable existe
  if [[ -n "${SERVICES}" ]]; then
    # chargement du tableau
    les_services="${SERVICES[@]}"

    # Comme nous sommes dans une récursive, on interrompt le processus en
    # supprimant la variable SERVICES
    unset SERVICES

    # Enregistrement
    for service in "${les_services[@]}"; do
      LISTE_SERVICES+=( "${service}" )
    done

  fi

  # Les fichiers peuvent avoir un parent
  if [[ -n "${PARENT}" ]]; then
    # chargement du parent
    profil_parent="${PARENT}"
    unset PARENT

    # récupération des services du parent
    decouverte_services "${profil_parent}"
  fi
}

# Liste des profils disponibles comme base pour les instances
lister_profils() {
  detection=false

  for profil in `ls "${REP_PROFILS}"`; do
    # Exclusion du profil commun
    if [[ "${profil}" != "commun" ]]; then
      msg "${profil}"
      detection=true
    fi
  done

  if ! ${detection}; then
    msg_attention "Aucun profil trouvé."
  fi
}

# Listing des services trouvés
lister_services() {
  for service in ${LISTE_SERVICES[@]}; do
    msg_info "Service : ${service}"
  done
}


# Traite le chargement d'un profil
# 1: Nom du profil situé dans le dossier ./profils
charger_profil() {
  # Découverte de l'ensemble des services associés au fichier fourni
  decouverte_services "${PROFIL}"

  # Listing des services trouvés
  lister_services  
}

# Installe le profil donné en argument.
# 1: Nom du profil situé dans le dossier ./profils
installer_profil() {
  # Répertoire de l'instance
  REP_BASE="${REP_INSTANCES}/${PROFIL}"

  # Vérification de la présence du dossier
  if [[ ! -d "${REP_BASE}" ]]; then
    mkdir -p "${REP_BASE}" && msg_succes "Création répertoire '${REP_BASE}'"
  fi

  # Création du fichier docker-compose.yml
  creer_fichier_docker_compose "${REP_BASE}"
}

# Listing des instances installées
lister_instances() {
  detection=false

  msg_info "Liste des instances"

  # Liste des dossiers du répertoire des instances
  for instance in `ls "${REP_INSTANCES}"`; do
    fichier="${REP_INSTANCES}/${instance}/${NOM_FICHIER_DOCKER_COMPOSE}"
    if [[ -f "${fichier}" ]]; then
      msg "  - ${REP_INSTANCES}/${instance}"
      detection=true
    fi
  done

  if ! ${detection}; then
    msg_attention "Aucune instance trouvée."
  fi
}

# vim: ts=2 sw=2 et nu syn=bash
