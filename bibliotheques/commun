#!/usr/bin/env bash

#####
## VARIABLES
###

GRAS="\033[1m"                      # GRAS
COULEUR_ROUGE="\033[31m"            # Couleur rouge
COULEUR_VERT="\033[32m"             # Couleur vert
COULEUR_BLEU="\033[34m"             # Couleur bleu
COULEUR_JAUNE="\033[1;33m"          # Couleur jaune

COULEUR_DEFAUT="\033[0m"            # Annulation de couleur
COULEUR_INFO="\033[7;49;34m"        # Fond bleu
COULEUR_SUCCES="\033[7;49;32m"      # Fond vert
COULEUR_ATTENTION="\033[7;49;33m"   # Fond jaune/orange
COULEUR_ERREUR="\033[7;49;31m"      # Fond rouge
COULEUR_SPECIALE="\033[1;49;34m"    # Écriture grasse, bleue avec fond normal

#####
## FONCTIONS
###

# Messages avec des couleurs, comme les arc-en-ciel :-)
# Cf. https://misc.flogisoft.com/bash/tip_colors_and_formatting
msg_couleur() {
  # $1: couleur choisie
  # $2: titre
  # $3: message
  echo -e "${1}[${2}]${COULEUR_DEFAUT} ${3}" 1>&2
}
# Message normal
msg() {
  echo -e "${COULEUR_DEFAUT}${1}" 1>&2
}
# Message spécial
msg_special() {
  echo -e "${COULEUR_SPECIALE}${1}${COULEUR_DEFAUT}" 1>&2
}
# Message d'information, plus prononcé
msg_info() {
  msg_couleur "${COULEUR_INFO}" "INF" "${1}"
}
# Porter l'attention sur une information importante
msg_attention() {
  msg_couleur "${COULEUR_ATTENTION}" "ATT" "${1}"
}
# Erreur ç_ç
msg_erreur() {
  msg_couleur "${COULEUR_ERREUR}" "ERR" "${1}"
}
# Réussite !
msg_succes() {
  msg_couleur "${COULEUR_SUCCES}" "OK " "${1}"
}
# Échec, j'arrête le programme !
msg_erreur_exit() {
  msg_erreur "${1}" && exit 1
}
# Message pour DEBUG en temps de développement
msg_debug() {
  if [[ ${DEBUG} == true ]]; then
    msg "$1"
  fi
}

# Exécute le script donné en paramètre, si le fichier existe
# 1: Script à exécuter
# 2: (optionnel) Message pre-exécution
# 3: (optionnel) Message post-exécution
executer_script() {
  # Aucune action si le fichier n'existe pas
  if [[ -f "${1}" ]]; then
    # Message pre-exécution
    if [[ -n "${2}" ]]; then
      msg_info "${2}"
    fi
    # Exécution
    source "${1}"
    # Message post-exécution
    if [[ -n "${3}" ]]; then
      msg_info "${3}"
    fi
  fi
}

# vim: ts=2 sw=2 et nu syn=bash
